variables:
  # Please edit to your GitLab project
  REPO_NAME: gitlab.com/Arno500/plex-richpresence
  LINUX_AMD64_BINARY: "plex-rich-presence_linux_64bits-${CI_COMMIT_TAG}"
  WINDOWS_AMD64_BINARY: "plex-rich-presence_win_64bits-${CI_COMMIT_TAG}.exe"
  PACKAGE_REGISTRY_URL: "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/plex-rich-presence/${CI_COMMIT_TAG}"

# The problem is that to be able to use go get, one needs to put
# the repository in the $GOPATH. So for example if your gitlab domain
# is gitlab.com, and that your repository is namespace/project, and
# the default GOPATH being /go, then you'd need to have your
# repository in /go/src/gitlab.com/namespace/project
# Thus, making a symbolic link corrects this.
before_script:
  - mkdir -p $GOPATH/src/$(dirname $REPO_NAME)
  - ln -svf $CI_PROJECT_DIR $GOPATH/src/$REPO_NAME
  - cd $GOPATH/src/$REPO_NAME

stages:
  - build
  - upload
  - release

compile-linux:
  image: golang:latest
  when: manual
  stage: build
  script:
    - apt-get update && apt-get -y install gcc libgtk-3-dev libappindicator3-dev
    - GOOS=linux GOARCH=amd64 go build -race -tags unix -ldflags "-s -w" -o $CI_PROJECT_DIR/${LINUX_AMD64_BINARY}
  artifacts:
    paths:
      - plex-rich-presence_linux_64bits-*

compile-windows:
  image: x1unix/go-mingw
  when: manual
  stage: build
  script:
    - GOOS=windows GOARCH=amd64 go build -race -tags windows -ldflags "-s -w -extldflags '-static' -H=windowsgui" -o ${WINDOWS_AMD64_BINARY}
  artifacts:
    paths:
      - plex-rich-presence_win_64bits*

upload:
  stage: upload
  image: curlimages/curl:latest
  needs:
    - compile-linux
    - compile-windows
  before_script: []
  script:
    - |
      curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file ${WINDOWS_AMD64_BINARY} ${PACKAGE_REGISTRY_URL}/${WINDOWS_AMD64_BINARY}
    - |
      curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file ${LINUX_AMD64_BINARY} ${PACKAGE_REGISTRY_URL}/${LINUX_AMD64_BINARY}

release:
  image: registry.gitlab.com/gitlab-org/release-cli
  stage: release
  needs:
    - upload
  release:
    tag_name: $CI_COMMIT_TAG
    description: "Created automatically"
  before_script: []
  script:
    - |
      release-cli create --name "Release $CI_COMMIT_TAG" --tag-name $CI_COMMIT_TAG \
        --assets-link "{\"name\":\"${WINDOWS_AMD64_BINARY}\",\"url\":\"${PACKAGE_REGISTRY_URL}/${WINDOWS_AMD64_BINARY}\"}" \
        --assets-link "{\"name\":\"${LINUX_AMD64_BINARY}\",\"url\":\"${PACKAGE_REGISTRY_URL}/${LINUX_AMD64_BINARY}\"}"
