image: golang:latest

variables:
  # Please edit to your GitLab project
  REPO_NAME: gitlab.com/Arno500/plex-scrobbler

# The problem is that to be able to use go get, one needs to put
# the repository in the $GOPATH. So for example if your gitlab domain
# is gitlab.com, and that your repository is namespace/project, and
# the default GOPATH being /go, then you'd need to have your
# repository in /go/src/gitlab.com/namespace/project
# Thus, making a symbolic link corrects this.
before_script:
  - mkdir -p $GOPATH/src/$(dirname $REPO_NAME)
  - ln -svf $CI_PROJECT_DIR $GOPATH/src/$REPO_NAME
  - cd $GOPATH/src/$REPO_NAME
  - apt-get update && apt-get -y install build-essential libgtk-3-dev libappindicator-dev

stages:
  - test
  - build

format:
  stage: test
  script:
    - go fmt $(go list ./... | grep -v /vendor/)
    - go vet $(go list ./... | grep -v /vendor/)

compile:
  stage: build
  rules:
    - if: $CI_COMMIT_TAG
  release:
    tag_name: $CI_COMMIT_TAG
    description: "Created automatically"
  script:
    - apt-get -y install gcc libgtk-3-dev libappindicator3-dev
    - go build -race -tags windows -ldflags "-extldflags '-static' -s -w -H=windowsgui" -o $CI_PROJECT_DIR/plex-scrobbler_win-64bits.exe
    - go build -race -tags unix -ldflags "-extldflags '-static' -s -w" -o $CI_PROJECT_DIR/plex-scrobbler_unix
  artifacts:
    paths:
      - plex-scrobbler_win-64bits.exe
      - plex-scrobbler_unix
